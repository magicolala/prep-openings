# -*- coding: utf-8 -*-
from pathlib import Path

path = Path("src/App.tsx")
text = path.read_text(encoding="utf-8")
marker = "  const toggleVoiceListening = () => {"
if "const handleVoiceCommand = useCallback" not in text:
    block_lines = [
        "  const handleVoiceCommand = useCallback(async (utterance: string) => {",
        "    const normalized = utterance.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();",
        "    const sanitized = normalized.replace(/[^a-z0-9 ]/g, \" \" );",
        "    const tokens = sanitized.split(/\\s+/).filter(Boolean);",
        "    const includes = (segment: string) => sanitized.includes(segment);",
        "    const includesAny = (...segments: string[]) => segments.some(segment => includes(segment));",
        "",
        "    if (!tokens.length) {",
        "      return \"Rien capté. Essaie « mode sombre » ou « chapitre analyse »\";",
        "    }",
        "",
        "    if (includesAny(\"mode sombre\", \"mode nuit\", \"dark\")) {",
        "      if (appearance !== \"dark\") setAppearance(\"dark\");",
        "      return \"Thème nuit activé.\";",
        "    }",
        "",
        "    if (includesAny(\"mode clair\", \"mode jour\", \"light\")) {",
        "      if (appearance !== \"light\") setAppearance(\"light\");",
        "      return \"Thème jour activé.\";",
        "    }",
        "",
        "    if (includesAny(\"mode auto\", \"automatique\")) {",
        "      if (appearance !== \"auto\") setAppearance(\"auto\");",
        "      return \"Thème auto synchronisé.\";",
        "    }",
        "",
        "    if (includes(\"mode eco\")) {",
        "      const wantsDisable = includes(\"desactive\") || includes(\"retire\") || includes(\"coupe\");",
        "      if (wantsDisable) {",
        "        if (ecoMode) toggleEcoMode();",
        "        return \"Mode éco désactivé.\";",
        "      }",
        "      if (!ecoMode) toggleEcoMode();",
        "      return \"Mode éco activé.\";",
        "    }",
        "",
        "    if (includesAny(\"motion douce\", \"animation douce\", \"calme\", \"slow\")) {",
        "      if (motion !== \"calm\") setMotion(\"calm\");",
        "      return \"Animations adoucies.\";",
        "    }",
        "",
        "    if (includesAny(\"motion vive\", \"animation rapide\", \"dynamique\")) {",
        "      if (motion !== \"dynamic\") setMotion(\"dynamic\");",
        "      return \"Animations dynamiques activées.\";",
        "    }",
        "",
        "    if (includesAny(\"layout compact\", \"densite compacte\", \"compact\", \"dense\")) {",
        "      if (density !== \"compact\") setDensity(\"compact\");",
        "      return \"Layout compact activé.\";",
        "    }",
        "",
        "    if (includesAny(\"layout ample\", \"densite confortable\", \"confortable\", \"large\")) {",
        "      if (density !== \"comfortable\") setDensity(\"comfortable\");",
        "      return \"Layout ample activé.\";",
        "    }",
        "",
        "    if (includesAny(\"couleur\", \"accent\")) {",
        "      for (const preset of ACCENT_PRESETS) {",
        "        if (preset.keywords.some(keyword => includes(keyword))) {",
        "          if (accentHue !== preset.hue) setAccentHue(preset.hue);",
        "          return `Accent ${preset.label} activé.`;",
        "        }",
        "      }",
        "      return \"Dis-moi une couleur : violet, corail, émeraude, solaire ou océan.\";",
        "    }",
        "",
        "    if (includes(\"chapitre\") || includes(\"section\")) {",
        "      if (includesAny(\"brief\", \"contexte\")) {",
        "        setManualChapter(\"context\");",
        "        setActiveChapter(\"context\");",
        "        return \"Chapitre brief affiché.\";",
        "      }",
        "      if (includesAny(\"collecte\", \"scout\")) {",
        "        setManualChapter(\"scouting\");",
        "        setActiveChapter(\"scouting\");",
        "        return \"Chapitre collecte activé.\";",
        "      }",
        "      if (includes(\"analyse\")) {",
        "        setManualChapter(\"analysis\");",
        "        setActiveChapter(\"analysis\");",
        "        return \"Chapitre analyse activé.\";",
        "      }",
        "      if (includesAny(\"plan\", \"prep\", \"preparation\")) {",
        "        setManualChapter(\"prep\");",
        "        setActiveChapter(\"prep\");",
        "        return \"Chapitre plan ouvert.\";",
        "      }",
        "      return \"Chapitre inconnu. Essaie plan, analyse ou collecte.\";",
        "    }",
        "",
        "    if (includesAny(\"relance\", \"relancer\", \"relance analyse\", \"rejoue\", \"relancer analyse\")) {",
        "      if (lastRun) {",
        "        await run(lastRun.you, lastRun.opponent);",
        "        return `Je relance l'analyse pour ${lastRun.you} contre ${lastRun.opponent}.`;",
        "      }",
        "      return \"Aucune analyse mémorisée.\";",
        "    }",
        "",
        "    if (includes(\"debug\")) {",
        "      const wantsClose = includes(\"ferme\") || includes(\"masque\") || includes(\"cache\");",
        "      if (wantsClose) {",
        "        setDebugOpen(false);",
        "        return \"Console debug masquée.\";",
        "      }",
        "      setDebugOpen(true);",
        "      return \"Console debug affichée.\";",
        "    }",
        "",
        "    if (includes(\"assistant vocal\") && includesAny(\"desactive\", \"coupe\", \"stop\")) {",
        "      if (voiceEnabled) toggleVoice();",
        "      return \"Assistant vocal désactivé.\";",
        "    }",
        "",
        "    if (includes(\"assistant vocal\") && includesAny(\"active\", \"demarre\", \"lance\")) {",
        "      if (!voiceEnabled) toggleVoice();",
        "      return \"Assistant vocal activé.\";",
        "    }",
        "",
        "    if (includes(\"stop\")) {",
        "      return \"Je coupe l'écoute. Utilise le bouton micro pour reprendre.\";",
        "    }",
        "",
        "    return \"Commande non reconnue. Essaie « mode sombre », « chapitre analyse » ou « relance analyse ».\";",
        "  }, [accentHue, appearance, density, ecoMode, lastRun, motion, run, setAccentHue, setActiveChapter, setAppearance, setDensity, setManualChapter, setMotion, setDebugOpen, toggleEcoMode, toggleVoice, voiceEnabled]);",
        ""
    ]
    block = "\n".join(block_lines)
    text = text.replace(marker, block + marker)
    path.write_text(text, encoding="utf-8")
